
    Query(CreateRole({
    name: 'Role_User_Bingo_Boards',
    membership: {
      resource: Collection('users'),
    },
    privileges: [
      {
        resource: Collection('bingo_board'),
        actions: {
          read: true,
          create: true,
          delete: Query(
            Lambda(
              ['boardRef'],
              Equals(Select(['data', 'id'], Get(CurrentIdentity())), Select(['data', 'author'], Get(Var('boardRef')))),
            ),
          ),
          write: Query(
            Lambda(
              ['oldBoardData', 'newBoardData'],
              And(
                Equals(Select(['data', 'id'], Get(CurrentIdentity())), Select(['data', 'author'], Var('oldBoardData'))),
                Equals(
                  Select(['data', 'author'], Var('oldBoardData')),
                  Select(['data', 'author'], Var('newBoardData')),
                ),
              ),
            ),
          ),
        },
      },
    ],
  }))

